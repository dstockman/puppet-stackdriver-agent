LoadPlugin match_regex
LoadPlugin target_set
<Chain "PreCache">
    # Each queue needs a separate "Rule" section

<% queue_names = @queues.map{ |q| q.has_key?('name') ? q['name'] : @queue }.uniq.each do |name| -%>
<%     next if name.to_s.strip.length == 0 -%>

    <Rule>
        <Match regex>
            Plugin "^curl_json$"
            PluginInstance "^<%= name %>$"
        </Match>
        <Target "set">
            Plugin "rabbitmq"
            PluginInstance "<%= name %>"
        </Target>
    </Rule>

<% end -%>
</Chain>

LoadPlugin "curl_json"
<Plugin curl_json>
    # Each queue needs a separate "URL" section that points to
    # http://localhost:15672/api/queues/vhost/queue_name
    # Each URL section must match one of the Rules sections

<% @queues.each do |queue| -%>
<%     q = { 'host' => @host, 'port' => @port, 'vhost' => @vhost, 'name' => @queue, 'user' => @user, 'password' => @password }.merge(queue) -%>
<%     next if q['name'].to_s.strip.length == 0 -%>
    <URL "http://<%= q['host'] %>:<%= q['port'] %>/api/queues/<%= q['vhost'] =~ /%/ ? q['vhost'] : ERB::Util.url_encode(q['vhost']) %>/<%= q['name'] =~ /%/ ? q['name'] : ERB::Util.url_encode(q['name']) %>">
        Instance "<%= q['name'] %>"
        User "<%= q['user'] %>"
        Password "<%= Regexp::quote(q['password']) -%>"

        <Key "messages">
            Type "gauge"
        </Key>
        <Key "messages_unacknowledged">
            Type "gauge"
        </Key>
        <Key "messages_ready">
            Type "gauge"
        </Key>
        <Key "consumers">
            Type "gauge"
        </Key>
        <Key "message_stats/publish_details/rate">
            Type "gauge"
        </Key>
        <Key "message_stats/deliver_details/rate">
            Type "gauge"
        </Key>
    </URL>

<% end -%>
</Plugin>
